//#line 2 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the esvo_core package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __esvo_core__DVS_MAPPINGSTEREOCONFIG_H__
#define __esvo_core__DVS_MAPPINGSTEREOCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace esvo_core
{
  class DVS_MappingStereoConfigStatics;

  class DVS_MappingStereoConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(DVS_MappingStereoConfig &config, const DVS_MappingStereoConfig &max, const DVS_MappingStereoConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const DVS_MappingStereoConfig &config1, const DVS_MappingStereoConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, DVS_MappingStereoConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const DVS_MappingStereoConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, DVS_MappingStereoConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const DVS_MappingStereoConfig &config) const = 0;
      virtual void getValue(const DVS_MappingStereoConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T DVS_MappingStereoConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T (DVS_MappingStereoConfig::* field);

      virtual void clamp(DVS_MappingStereoConfig &config, const DVS_MappingStereoConfig &max, const DVS_MappingStereoConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const DVS_MappingStereoConfig &config1, const DVS_MappingStereoConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, DVS_MappingStereoConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const DVS_MappingStereoConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, DVS_MappingStereoConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const DVS_MappingStereoConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const DVS_MappingStereoConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, DVS_MappingStereoConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, DVS_MappingStereoConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<DVS_MappingStereoConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(DVS_MappingStereoConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("EM_TIME_THRESHOLD"==(*_i)->name){EM_TIME_THRESHOLD = boost::any_cast<double>(val);}
        if("EM_EPIPOLAR_THRESHOLD"==(*_i)->name){EM_EPIPOLAR_THRESHOLD = boost::any_cast<double>(val);}
        if("EM_TS_NCC_THRESHOLD"==(*_i)->name){EM_TS_NCC_THRESHOLD = boost::any_cast<double>(val);}
        if("EM_NUM_EVENT_MATCHING"==(*_i)->name){EM_NUM_EVENT_MATCHING = boost::any_cast<int>(val);}
        if("EM_PATCH_INTENSITY_THRESHOLD"==(*_i)->name){EM_PATCH_INTENSITY_THRESHOLD = boost::any_cast<int>(val);}
        if("EM_PATCH_VALID_RATIO"==(*_i)->name){EM_PATCH_VALID_RATIO = boost::any_cast<double>(val);}
        if("BM_MAX_NUM_EVENTS_PER_MATCHING"==(*_i)->name){BM_MAX_NUM_EVENTS_PER_MATCHING = boost::any_cast<int>(val);}
        if("BM_min_disparity"==(*_i)->name){BM_min_disparity = boost::any_cast<int>(val);}
        if("BM_max_disparity"==(*_i)->name){BM_max_disparity = boost::any_cast<int>(val);}
        if("BM_step"==(*_i)->name){BM_step = boost::any_cast<int>(val);}
        if("BM_ZNCC_Threshold"==(*_i)->name){BM_ZNCC_Threshold = boost::any_cast<double>(val);}
        if("invDepth_min_range"==(*_i)->name){invDepth_min_range = boost::any_cast<double>(val);}
        if("invDepth_max_range"==(*_i)->name){invDepth_max_range = boost::any_cast<double>(val);}
        if("residual_vis_threshold"==(*_i)->name){residual_vis_threshold = boost::any_cast<double>(val);}
        if("stdVar_vis_threshold"==(*_i)->name){stdVar_vis_threshold = boost::any_cast<double>(val);}
        if("age_max_range"==(*_i)->name){age_max_range = boost::any_cast<int>(val);}
        if("age_vis_threshold"==(*_i)->name){age_vis_threshold = boost::any_cast<int>(val);}
        if("fusion_radius"==(*_i)->name){fusion_radius = boost::any_cast<int>(val);}
        if("maxNumFusionFrames"==(*_i)->name){maxNumFusionFrames = boost::any_cast<int>(val);}
        if("maxNumFusionPoints"==(*_i)->name){maxNumFusionPoints = boost::any_cast<int>(val);}
        if("PROCESS_EVENT_NUM"==(*_i)->name){PROCESS_EVENT_NUM = boost::any_cast<int>(val);}
        if("TS_HISTORY_LENGTH"==(*_i)->name){TS_HISTORY_LENGTH = boost::any_cast<int>(val);}
        if("mapping_rate_hz"==(*_i)->name){mapping_rate_hz = boost::any_cast<int>(val);}
        if("Denoising"==(*_i)->name){Denoising = boost::any_cast<bool>(val);}
        if("Regularization"==(*_i)->name){Regularization = boost::any_cast<bool>(val);}
        if("ResetButton"==(*_i)->name){ResetButton = boost::any_cast<bool>(val);}
      }
    }

    double EM_TIME_THRESHOLD;
double EM_EPIPOLAR_THRESHOLD;
double EM_TS_NCC_THRESHOLD;
int EM_NUM_EVENT_MATCHING;
int EM_PATCH_INTENSITY_THRESHOLD;
double EM_PATCH_VALID_RATIO;
int BM_MAX_NUM_EVENTS_PER_MATCHING;
int BM_min_disparity;
int BM_max_disparity;
int BM_step;
double BM_ZNCC_Threshold;
double invDepth_min_range;
double invDepth_max_range;
double residual_vis_threshold;
double stdVar_vis_threshold;
int age_max_range;
int age_vis_threshold;
int fusion_radius;
int maxNumFusionFrames;
int maxNumFusionPoints;
int PROCESS_EVENT_NUM;
int TS_HISTORY_LENGTH;
int mapping_rate_hz;
bool Denoising;
bool Regularization;
bool ResetButton;

    bool state;
    std::string name;

    
}groups;



//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double EM_TIME_THRESHOLD;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double EM_EPIPOLAR_THRESHOLD;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double EM_TS_NCC_THRESHOLD;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int EM_NUM_EVENT_MATCHING;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int EM_PATCH_INTENSITY_THRESHOLD;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double EM_PATCH_VALID_RATIO;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int BM_MAX_NUM_EVENTS_PER_MATCHING;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int BM_min_disparity;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int BM_max_disparity;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int BM_step;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double BM_ZNCC_Threshold;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double invDepth_min_range;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double invDepth_max_range;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double residual_vis_threshold;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double stdVar_vis_threshold;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int age_max_range;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int age_vis_threshold;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int fusion_radius;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int maxNumFusionFrames;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int maxNumFusionPoints;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int PROCESS_EVENT_NUM;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int TS_HISTORY_LENGTH;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int mapping_rate_hz;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool Denoising;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool Regularization;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool ResetButton;
//#line 228 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("DVS_MappingStereoConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const DVS_MappingStereoConfig &__max__ = __getMax__();
      const DVS_MappingStereoConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const DVS_MappingStereoConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const DVS_MappingStereoConfig &__getDefault__();
    static const DVS_MappingStereoConfig &__getMax__();
    static const DVS_MappingStereoConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const DVS_MappingStereoConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void DVS_MappingStereoConfig::ParamDescription<std::string>::clamp(DVS_MappingStereoConfig &config, const DVS_MappingStereoConfig &max, const DVS_MappingStereoConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class DVS_MappingStereoConfigStatics
  {
    friend class DVS_MappingStereoConfig;

    DVS_MappingStereoConfigStatics()
    {
DVS_MappingStereoConfig::GroupDescription<DVS_MappingStereoConfig::DEFAULT, DVS_MappingStereoConfig> Default("Default", "", 0, 0, true, &DVS_MappingStereoConfig::groups);
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.EM_TIME_THRESHOLD = 1e-06;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.EM_TIME_THRESHOLD = 0.001;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.EM_TIME_THRESHOLD = 0.0001;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("EM_TIME_THRESHOLD", "double", 0, "EM_TIME_THRESHOLD", "", &DVS_MappingStereoConfig::EM_TIME_THRESHOLD)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("EM_TIME_THRESHOLD", "double", 0, "EM_TIME_THRESHOLD", "", &DVS_MappingStereoConfig::EM_TIME_THRESHOLD)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.EM_EPIPOLAR_THRESHOLD = 0.1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.EM_EPIPOLAR_THRESHOLD = 5.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.EM_EPIPOLAR_THRESHOLD = 0.5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("EM_EPIPOLAR_THRESHOLD", "double", 0, "EM_EPIPOLAR_THRESHOLD", "", &DVS_MappingStereoConfig::EM_EPIPOLAR_THRESHOLD)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("EM_EPIPOLAR_THRESHOLD", "double", 0, "EM_EPIPOLAR_THRESHOLD", "", &DVS_MappingStereoConfig::EM_EPIPOLAR_THRESHOLD)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.EM_TS_NCC_THRESHOLD = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.EM_TS_NCC_THRESHOLD = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.EM_TS_NCC_THRESHOLD = 0.1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("EM_TS_NCC_THRESHOLD", "double", 0, "EM_TS_NCC_THRESHOLD", "", &DVS_MappingStereoConfig::EM_TS_NCC_THRESHOLD)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("EM_TS_NCC_THRESHOLD", "double", 0, "EM_TS_NCC_THRESHOLD", "", &DVS_MappingStereoConfig::EM_TS_NCC_THRESHOLD)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.EM_NUM_EVENT_MATCHING = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.EM_NUM_EVENT_MATCHING = 100000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.EM_NUM_EVENT_MATCHING = 30000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("EM_NUM_EVENT_MATCHING", "int", 0, "EM_NUM_EVENT_MATCHING", "", &DVS_MappingStereoConfig::EM_NUM_EVENT_MATCHING)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("EM_NUM_EVENT_MATCHING", "int", 0, "EM_NUM_EVENT_MATCHING", "", &DVS_MappingStereoConfig::EM_NUM_EVENT_MATCHING)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.EM_PATCH_INTENSITY_THRESHOLD = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.EM_PATCH_INTENSITY_THRESHOLD = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.EM_PATCH_INTENSITY_THRESHOLD = 125;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("EM_PATCH_INTENSITY_THRESHOLD", "int", 0, "EM_PATCH_INTENSITY_THRESHOLD", "", &DVS_MappingStereoConfig::EM_PATCH_INTENSITY_THRESHOLD)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("EM_PATCH_INTENSITY_THRESHOLD", "int", 0, "EM_PATCH_INTENSITY_THRESHOLD", "", &DVS_MappingStereoConfig::EM_PATCH_INTENSITY_THRESHOLD)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.EM_PATCH_VALID_RATIO = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.EM_PATCH_VALID_RATIO = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.EM_PATCH_VALID_RATIO = 0.1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("EM_PATCH_VALID_RATIO", "double", 0, "EM_PATCH_VALID_RATIO", "", &DVS_MappingStereoConfig::EM_PATCH_VALID_RATIO)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("EM_PATCH_VALID_RATIO", "double", 0, "EM_PATCH_VALID_RATIO", "", &DVS_MappingStereoConfig::EM_PATCH_VALID_RATIO)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.BM_MAX_NUM_EVENTS_PER_MATCHING = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.BM_MAX_NUM_EVENTS_PER_MATCHING = 50000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.BM_MAX_NUM_EVENTS_PER_MATCHING = 400;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("BM_MAX_NUM_EVENTS_PER_MATCHING", "int", 0, "BM_MAX_NUM_EVENTS_PER_MATCHING", "", &DVS_MappingStereoConfig::BM_MAX_NUM_EVENTS_PER_MATCHING)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("BM_MAX_NUM_EVENTS_PER_MATCHING", "int", 0, "BM_MAX_NUM_EVENTS_PER_MATCHING", "", &DVS_MappingStereoConfig::BM_MAX_NUM_EVENTS_PER_MATCHING)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.BM_min_disparity = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.BM_min_disparity = 5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.BM_min_disparity = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("BM_min_disparity", "int", 0, "BM_min_disparity", "", &DVS_MappingStereoConfig::BM_min_disparity)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("BM_min_disparity", "int", 0, "BM_min_disparity", "", &DVS_MappingStereoConfig::BM_min_disparity)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.BM_max_disparity = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.BM_max_disparity = 150;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.BM_max_disparity = 40;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("BM_max_disparity", "int", 0, "BM_max_disparity", "", &DVS_MappingStereoConfig::BM_max_disparity)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("BM_max_disparity", "int", 0, "BM_max_disparity", "", &DVS_MappingStereoConfig::BM_max_disparity)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.BM_step = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.BM_step = 5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.BM_step = 2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("BM_step", "int", 0, "BM_step", "", &DVS_MappingStereoConfig::BM_step)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("BM_step", "int", 0, "BM_step", "", &DVS_MappingStereoConfig::BM_step)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.BM_ZNCC_Threshold = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.BM_ZNCC_Threshold = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.BM_ZNCC_Threshold = 0.1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("BM_ZNCC_Threshold", "double", 0, "BM_ZNCC_Threshold", "", &DVS_MappingStereoConfig::BM_ZNCC_Threshold)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("BM_ZNCC_Threshold", "double", 0, "BM_ZNCC_Threshold", "", &DVS_MappingStereoConfig::BM_ZNCC_Threshold)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.invDepth_min_range = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.invDepth_min_range = 10.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.invDepth_min_range = 0.16;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("invDepth_min_range", "double", 0, "InvDepth_MIN_RANGE", "", &DVS_MappingStereoConfig::invDepth_min_range)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("invDepth_min_range", "double", 0, "InvDepth_MIN_RANGE", "", &DVS_MappingStereoConfig::invDepth_min_range)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.invDepth_max_range = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.invDepth_max_range = 10.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.invDepth_max_range = 2.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("invDepth_max_range", "double", 0, "InvDepth_MAX_RANGE", "", &DVS_MappingStereoConfig::invDepth_max_range)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("invDepth_max_range", "double", 0, "InvDepth_MAX_RANGE", "", &DVS_MappingStereoConfig::invDepth_max_range)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.residual_vis_threshold = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.residual_vis_threshold = 1000000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.residual_vis_threshold = 12.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("residual_vis_threshold", "double", 0, "Residual_VIS_THRESHOLD", "", &DVS_MappingStereoConfig::residual_vis_threshold)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("residual_vis_threshold", "double", 0, "Residual_VIS_THRESHOLD", "", &DVS_MappingStereoConfig::residual_vis_threshold)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.stdVar_vis_threshold = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.stdVar_vis_threshold = 10000000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.stdVar_vis_threshold = 0.12;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("stdVar_vis_threshold", "double", 0, "StdVariance_VIS_THRESHOLD", "", &DVS_MappingStereoConfig::stdVar_vis_threshold)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<double>("stdVar_vis_threshold", "double", 0, "StdVariance_VIS_THRESHOLD", "", &DVS_MappingStereoConfig::stdVar_vis_threshold)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.age_max_range = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.age_max_range = 10;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.age_max_range = 5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("age_max_range", "int", 0, "Age_MAX_RANGE", "", &DVS_MappingStereoConfig::age_max_range)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("age_max_range", "int", 0, "Age_MAX_RANGE", "", &DVS_MappingStereoConfig::age_max_range)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.age_vis_threshold = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.age_vis_threshold = 10;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.age_vis_threshold = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("age_vis_threshold", "int", 0, "Age_VIS_RANGE", "", &DVS_MappingStereoConfig::age_vis_threshold)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("age_vis_threshold", "int", 0, "Age_VIS_RANGE", "", &DVS_MappingStereoConfig::age_vis_threshold)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.fusion_radius = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.fusion_radius = 5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.fusion_radius = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("fusion_radius", "int", 0, "fusion radius", "", &DVS_MappingStereoConfig::fusion_radius)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("fusion_radius", "int", 0, "fusion radius", "", &DVS_MappingStereoConfig::fusion_radius)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.maxNumFusionFrames = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.maxNumFusionFrames = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.maxNumFusionFrames = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("maxNumFusionFrames", "int", 0, "Max Fusion Times", "", &DVS_MappingStereoConfig::maxNumFusionFrames)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("maxNumFusionFrames", "int", 0, "Max Fusion Times", "", &DVS_MappingStereoConfig::maxNumFusionFrames)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.maxNumFusionPoints = 1000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.maxNumFusionPoints = 20000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.maxNumFusionPoints = 5000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("maxNumFusionPoints", "int", 0, "Max Fusion Points", "", &DVS_MappingStereoConfig::maxNumFusionPoints)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("maxNumFusionPoints", "int", 0, "Max Fusion Points", "", &DVS_MappingStereoConfig::maxNumFusionPoints)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.PROCESS_EVENT_NUM = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.PROCESS_EVENT_NUM = 100000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.PROCESS_EVENT_NUM = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("PROCESS_EVENT_NUM", "int", 0, "#processed event", "", &DVS_MappingStereoConfig::PROCESS_EVENT_NUM)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("PROCESS_EVENT_NUM", "int", 0, "#processed event", "", &DVS_MappingStereoConfig::PROCESS_EVENT_NUM)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.TS_HISTORY_LENGTH = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.TS_HISTORY_LENGTH = 300;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.TS_HISTORY_LENGTH = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("TS_HISTORY_LENGTH", "int", 0, "time_surface history length", "", &DVS_MappingStereoConfig::TS_HISTORY_LENGTH)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("TS_HISTORY_LENGTH", "int", 0, "time_surface history length", "", &DVS_MappingStereoConfig::TS_HISTORY_LENGTH)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.mapping_rate_hz = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.mapping_rate_hz = 30;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.mapping_rate_hz = 20;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("mapping_rate_hz", "int", 0, "mapping rate", "", &DVS_MappingStereoConfig::mapping_rate_hz)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<int>("mapping_rate_hz", "int", 0, "mapping rate", "", &DVS_MappingStereoConfig::mapping_rate_hz)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Denoising = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Denoising = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Denoising = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<bool>("Denoising", "bool", 0, "denoising the events", "", &DVS_MappingStereoConfig::Denoising)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<bool>("Denoising", "bool", 0, "denoising the events", "", &DVS_MappingStereoConfig::Denoising)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Regularization = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Regularization = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Regularization = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<bool>("Regularization", "bool", 0, "perform regularization", "", &DVS_MappingStereoConfig::Regularization)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<bool>("Regularization", "bool", 0, "perform regularization", "", &DVS_MappingStereoConfig::Regularization)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.ResetButton = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.ResetButton = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.ResetButton = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<bool>("ResetButton", "bool", 0, "reset system (used as a button...)", "", &DVS_MappingStereoConfig::ResetButton)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr(new DVS_MappingStereoConfig::ParamDescription<bool>("ResetButton", "bool", 0, "reset system (used as a button...)", "", &DVS_MappingStereoConfig::ResetButton)));
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(DVS_MappingStereoConfig::AbstractGroupDescriptionConstPtr(new DVS_MappingStereoConfig::GroupDescription<DVS_MappingStereoConfig::DEFAULT, DVS_MappingStereoConfig>(Default)));
//#line 366 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<DVS_MappingStereoConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<DVS_MappingStereoConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    DVS_MappingStereoConfig __max__;
    DVS_MappingStereoConfig __min__;
    DVS_MappingStereoConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const DVS_MappingStereoConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static DVS_MappingStereoConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &DVS_MappingStereoConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const DVS_MappingStereoConfig &DVS_MappingStereoConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const DVS_MappingStereoConfig &DVS_MappingStereoConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const DVS_MappingStereoConfig &DVS_MappingStereoConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<DVS_MappingStereoConfig::AbstractParamDescriptionConstPtr> &DVS_MappingStereoConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<DVS_MappingStereoConfig::AbstractGroupDescriptionConstPtr> &DVS_MappingStereoConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const DVS_MappingStereoConfigStatics *DVS_MappingStereoConfig::__get_statics__()
  {
    const static DVS_MappingStereoConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = DVS_MappingStereoConfigStatics::get_instance();

    return statics;
  }


}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __DVS_MAPPINGSTEREORECONFIGURATOR_H__
